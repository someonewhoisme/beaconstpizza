// Generated by CoffeeScript 1.7.1
(function() {
  $(function() {
    var PreOrder;
    PreOrder = {
      global: {
        subHeader: $(".lg")
      },
      section: {
        email: {
          form: $("#email-form"),
          container: $('.get-email'),
          btn: $('#get-email-btn'),
          input: $('#email-form input[name="email"]')
        },
        goal: {
          form: $("#your-goal-form"),
          container: $('.what-is-goal'),
          btn: $('#what-is-goal-btn')
        },
        data: {
          form: $('#data-form'),
          formTwo: $("#data-no-kit"),
          container: $('.dna-data'),
          yes: $('#dna-data-btn-yes'),
          no: $('#dna-data-btn-no')
        },
        twentythree: {
          container: $('.twentythree-and-me')
        },
        noKit: {
          container: $('.no-kit')
        }
      },
      elements: {
        alert: $(".alert")
      },
      btn: $("#button"),
      setElements: function() {
        if (this.section.goal.container.is(':visible')) {
          this.section.goal.container.addClass('hidden');
        }
        if (this.section.data.container.is(':visible')) {
          this.section.data.container.addClass('hidden');
        }
        if (this.section.twentythree.container.is(':visible')) {
          return this.section.twentythree.container.addClass('hidden');
        }
      },
      getCookie: function(name) {
        var cookie, cookieValue, cookies, i, _i, _ref;
        cookieValue = null;
        if (document.cookie && document.cookie !== '') {
          cookies = document.cookie.split(';');
          for (i = _i = 0, _ref = cookies.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
            cookie = jQuery.trim(cookies[i]);
            if (cookie.substring(0, name.length + 1) === (name + '=')) {
              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
              break;
            }
          }
        }
        return cookieValue;
      },
      displayError: function(msg) {
        var that;
        if (this.elements.alert.is(':visible')) {
          this.elements.alert.fadeOut();
        }
        this.elements.alert.html(msg);
        window.scrollTo(0, 0);
        this.elements.alert.fadeIn();
        that = this;
        setTimeout(function() {
          return that.elements.alert.fadeOut();
        }, 2000);
      },
      validateEmail: function() {
        var email;
        email = $('input[name="email"]');
        if (email.val().length === 0 || !/^\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/.test(email.val())) {
          this.displayError('please enter a valid email address.');
          return false;
        } else {
          return true;
        }
      },
      csrfSafe: function(method) {
        return /^(GET|HEAD|OPTIONS|TRACE)$/.test(method);
      },
      init: function() {
        var cookie, that;
        that = this;
        this.section.email.input.focus();
        this.setElements();
        cookie = this.getCookie('csrftoken');
        this.section.email.form.submit(function(event) {
          var self, theData;
          event.preventDefault();
          self = $(this);
          theData = self.serializeArray();
          that.section.email.btn.prop('disabled', true);
          that.section.email.btn.val('working...');
          $.ajax({
            url: "/",
            type: "POST",
            data: theData,
            beforeSend: function(xhr, settings) {
              if (!that.validateEmail()) {
                xhr.abort();
                that.section.email.btn.prop('disabled', false);
                that.section.email.btn.val('GO!');
              }
              if (!that.csrfSafe(settings.type) && !that.crossDomain) {
                return xhr.setRequestHeader("X-CSRFToken", cookie);
              }
            },
            success: function(data, textStatus, jqXHR) {
              var parsed;
              parsed = jQuery.parseJSON(data);
              if (parsed.success === true) {
                that.section.email.container.addClass('hidden');
                that.section.goal.container.removeClass('hidden');
                return that.global.subHeader.slideUp();
              } else {
                if (parsed.data === 'redirect') {
                  window.location = '/order/new/';
                }
                that.section.email.btn.prop('disabled', false);
                that.section.email.btn.val('GO!');
                $("#email").val('');
                that.displayError(parsed.message);
              }
            },
            error: function(jqXHR, textStatus, errorThrown) {
              return console.log(errorThrown);
            }
          });
          return false;
        });
        this.section.goal.form.submit(function(event) {
          var self, theData;
          event.preventDefault();
          self = $(this);
          theData = self.serializeArray();
          that.section.goal.btn.prop('disabled', true);
          that.section.goal.btn.val('working...');
          $.ajax({
            url: "/goal/",
            type: "POST",
            data: theData,
            success: function(data, textStatus, jqXHR) {
              var parsed;
              parsed = jQuery.parseJSON(data);
              if (parsed.success === true) {
                that.section.goal.container.addClass('hidden');
                return that.section.data.container.removeClass('hidden');
              } else {
                that.section.goal.btn.prop('disabled', true);
                return that.section.goal.btn.val("LET'S DO THIS!");
              }
            }
          });
          return false;
        });
        this.section.data.form.submit(function(event) {
          var btnValue, self, theData;
          event.preventDefault();
          self = $(this);
          theData = self.serializeArray();
          that.section.data.yes.prop('disabled', true);
          btnValue = that.section.data.yes.val();
          that.section.data.yes.val('working...');
          return $.ajax({
            url: "/data/",
            type: "POST",
            data: theData,
            success: function(data, textStatus, jqXHR) {
              var parsed;
              parsed = jQuery.parseJSON(data);
              if (parsed.success === true) {
                that.section.data.container.addClass('hidden');
                return that.section.twentythree.container.removeClass('hidden');
              } else {
                that.section.data.yes.prop('disabled', false);
                return that.section.data.yes.val(btnValue);
              }
            }
          });
        });
        this.section.data.formTwo.submit(function(event) {
          var btnValue, self, theData;
          event.preventDefault();
          self = $(this);
          theData = self.serializeArray();
          that.section.data.no.prop('disabled', true);
          btnValue = that.section.data.no.val();
          that.section.data.no.val('working...');
          return $.ajax({
            url: "/no-data/",
            type: "POST",
            data: theData,
            success: function(data, textStatus, jqXHR) {
              var parsed;
              parsed = jQuery.parseJSON(data);
              if (parsed.success === true) {
                return window.location = '/order/new/';
              } else {
                that.section.data.no.prop('disabled', false);
                return that.section.data.no.val(btnValue);
              }
            }
          });
        });

        /*
        			@section.email.btn.click((event) -> 
        				event.preventDefault()
        				that.section.email.container.addClass('hidden')
        				that.section.goal.container.removeClass('hidden')
        			)
        			@section.goal.btn.click((event) ->
        				that.section.goal.container.addClass('hidden')
        				that.section.data.container.removeClass('hidden')
        			)
        			@section.data.yes.click((event) -> 
        				event.preventDefault()
        				that.section.data.container.addClass('hidden')
        				that.section.twentythree.container.removeClass('hidden')
        			)s
        			@section.data.yes.click((event) -> 
        				event.preventDefault()
        			)
         */
      }
    };
    return PreOrder.init();
  });

}).call(this);
